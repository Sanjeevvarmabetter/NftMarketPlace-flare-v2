{"version":3,"file":"get-bip32-public-key.mjs","sourceRoot":"","sources":["../../../src/types/methods/get-bip32-public-key.ts"],"names":[],"mappings":"","sourcesContent":["import type { Bip32Entropy } from '../permissions';\n\n/**\n * The request parameters for the `snap_getBip32PublicKey` method.\n */\nexport type GetBip32PublicKeyParams = Bip32Entropy & {\n  /**\n   * Whether to return the compressed public key. Defaults to `false`.\n   */\n  compressed?: boolean;\n\n  /**\n   * The ID of the entropy source to use. If not specified, the primary entropy\n   * source will be used. For a list of available entropy sources, see the\n   * `snap_listEntropySources` method.\n   */\n  source?: string | undefined;\n};\n\n/**\n * The result returned by the `snap_getBip32PublicKey` method.\n *\n * It is the public key in hexadecimal format, in either compressed or\n * uncompressed format, depending on the `compressed` parameter.\n */\nexport type GetBip32PublicKeyResult = string;\n"]}