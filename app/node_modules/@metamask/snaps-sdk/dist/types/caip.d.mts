import { type CaipAccountId, type CaipChainId } from "@metamask/utils";
export type { CaipAccountId, CaipAssetType, CaipChainId, CaipNamespace, } from "@metamask/utils";
/**
 * A CAIP-2 chain ID, i.e., a human-readable namespace and reference.
 *
 * @see https://chainagnostic.org/CAIPs/caip-2
 * @deprecated Use {@link CaipChainId} instead.
 */
export type ChainId = CaipChainId;
/**
 * A CAIP-10 account ID, i.e., a chain ID and an account address.
 *
 * @see https://chainagnostic.org/CAIPs/caip-10
 * @deprecated Use {@link CaipAccountId} instead.
 */
export type AccountId = CaipAccountId;
/**
 * A struct representing a list of non-EIP-155 CAIP-10 account IDs where the account addresses are the same.
 */
export declare const NonEip155CaipAccountIdsMatchedByAddressAndNamespaceStruct: import("@metamask/superstruct").Struct<`${string}:${string}:${string}`[], import("@metamask/superstruct").Struct<`${string}:${string}:${string}`, null>>;
/**
 * A struct representing a non-EIP-155 chain ID.
 */
export declare const NonEip155ChainIdStruct: import("@metamask/superstruct").Struct<`${string}:${string}`, null>;
/**
 * A struct representing a non-EIP-155 asset type.
 */
export declare const NonEip155AssetTypeStruct: import("@metamask/superstruct").Struct<`${string}:${string}/${string}:${string}`, null>;
//# sourceMappingURL=caip.d.mts.map